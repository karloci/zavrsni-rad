# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.client_host: '%env(CLIENT_HOST)%'
services:
    authenticated_api.limiter:
        alias: limiter.authenticated_api
        public: true

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\EventListener\ExceptionListener:
        arguments:
            $isDebugMode: '%kernel.debug%'

    App\Service\serviceLocator:
        arguments:
            $entityManager: '@Doctrine\ORM\EntityManagerInterface'
            $security: '@Symfony\Bundle\SecurityBundle\Security'

    App\Service\TokenService:
        arguments:
            $tokenSecret: '%env(TOKEN_SECRET)%'
            $security: '@Symfony\Bundle\SecurityBundle\Security'
            $refreshTokenRepository: '@App\Module\Authentication\Repository\RefreshTokenRepository'
            $dataSerializer: '@App\Serializer\DataSerializer'

    App\Module\VerifyEmail\EventListener\RequestEmailVerificationListener:
        arguments:
            $clientHost: '%env(CLIENT_HOST)%'
            $mailer: '@Symfony\Component\Mailer\MailerInterface'
        tags:
            - { name: kernel.event_listener, event: user.request_email_verification, method: onRequestEmailVerification }

    App\Module\ResetPassword\EventListener\RequestResetPasswordListener:
        arguments:
            $clientHost: '%env(CLIENT_HOST)%'
            $mailer: '@Symfony\Component\Mailer\MailerInterface'
        tags:
            - { name: kernel.event_listener, event: user.request_reset_password, method: onRequestResetPassword }
